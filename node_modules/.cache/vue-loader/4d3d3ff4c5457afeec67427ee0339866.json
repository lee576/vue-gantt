{"remainingRequest":"D:\\MyCode\\vue-gantt\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MyCode\\vue-gantt\\src\\components\\gantt\\virtual-ruler.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\MyCode\\vue-gantt\\src\\components\\gantt\\virtual-ruler.vue","mtime":1649753719058},{"path":"D:\\MyCode\\vue-gantt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649728994235},{"path":"D:\\MyCode\\vue-gantt\\node_modules\\babel-loader\\lib\\index.js","mtime":1649728994097},{"path":"D:\\MyCode\\vue-gantt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649728994235},{"path":"D:\\MyCode\\vue-gantt\\node_modules\\vue-loader\\lib\\index.js","mtime":1649729006096}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["virtual-ruler.vue"],"names":[],"mappingsfile":"virtual-ruler.vue","sourceRoot":"src/components/gantt","sourcesContent":["<template>\r\n    <div class=\"virtual-ruler\" :data-vr-id=\"id\">\r\n        <div ref=\"scroll\" class=\"virtual-ruler-scroll\" :style=\"style\" @scroll=\"scroll\">\r\n            <div class=\"virtual-ruler-body\" :style=\"{minWidth: getPx(size)}\">\r\n                <div class=\"virtual-ruler-body-item\" :style=\"{transform: 'translateX(0)'}\"/>\r\n                <div class=\"virtual-ruler-body-item\" :style=\"{transform: `translateX(${getPx(halfWidth)})`}\"/>\r\n                <div\r\n                    v-for=\"(item, index) of pool\"\r\n                    :key=\"index\"\r\n                    :style=\"{transform: `translateX(${item.index * gap + halfWidth}px)`}\"\r\n                    class=\"virtual-ruler-body-item\">\r\n                    <div class=\"virtual-ruler-body-item-wrapper\" :data-id=\"item.index\">\r\n                        <div class=\"ruler-wrapper\" :style=\"{height: itemDIVHeight}\">\r\n                            <div :style=\"getItemStyle(item.index)\"/>\r\n                        </div>\r\n                        <div v-if=\"labelShow(item.index)\" :style=\"labelStyle\" class=\"virtual-ruler-label\">\r\n                            <slot name=\"label\" :value=\"item.gapValue\" :index=\"item.index\">\r\n                                {{item.gapValue}}\r\n                            </slot>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"virtual-ruler-point\" :style=\"_pointStyle\"/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nlet id = 0;\r\nfunction getNextId () {\r\n    id += 1;\r\n    return String(id);\r\n}\r\nexport default {\r\n    name: 'VirtualRuler',\r\n    props: {\r\n        // 默认值\r\n        defaultValue: Number,\r\n        // 最小刻度值\r\n        min: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        // 最大刻度值\r\n        max: {\r\n            type: Number,\r\n            default: 100\r\n        },\r\n        // 刻度间隔\r\n        gap: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        // 刻度线宽度\r\n        itemWidth: {\r\n            type: [Number, String],\r\n            default: 1\r\n        },\r\n        // 刻度线颜色\r\n        itemColor: {\r\n            type: String,\r\n            default: '#cccccc'\r\n        },\r\n        // 刻度线高度函数默认为 8/15/20\r\n        itemHeight: {\r\n            type: Function,\r\n            default: (index) => {\r\n                if (index % 10 === 0) {\r\n                    return 20;\r\n                }\r\n                if (index % 5 === 0) {\r\n                    return 15;\r\n                }\r\n                return 8;\r\n            }\r\n        },\r\n        // 刻度线最高高度 默认为 itemHeight 的最高高度\r\n        itemMaxHeight: {\r\n            type: [Number, String],\r\n            default () {\r\n                const all = Array.from({ length: this.max + 1 - this.min }).map((_, index) => this.itemHeight(index));\r\n                return Math.max(...all);\r\n            }\r\n        },\r\n        // 刻度标线宽度\r\n        pointWidth: {\r\n            type: [Number, String],\r\n            default: 1\r\n        },\r\n        // 刻度标线颜色\r\n        pointColor: {\r\n            type: String,\r\n            default: '#00C5CD'\r\n        },\r\n        // 刻度标线样式\r\n        pointStyle: Object,\r\n        // 刻度值label间隔\r\n        labelGap: {\r\n            type: Number,\r\n            default: 10\r\n        },\r\n        // 是否显示刻度值label\r\n        showLabel: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        // 刻度值的倍数，例如刻度值为 100，间隔为0.1则值为100 * 0.1,默认为1\r\n        valueGap: {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n        // 缓冲数量，预先渲染\r\n        buffer: {\r\n            type: Number,\r\n            default: 10\r\n        },\r\n        // 刻度尺高度\r\n        height: {\r\n            type: [Number, String],\r\n            required: true\r\n        },\r\n        // 刻度尺上边框\r\n        topBorder: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        // 刻度尺上边框宽度\r\n        topBorderWidth: {\r\n            type: [Number, String],\r\n            default: 1\r\n        },\r\n        // 刻度尺上边框颜色\r\n        topBorderColor: {\r\n            type: String,\r\n            default: '#cccccc'\r\n        },\r\n        // 刻度尺背景渐变\r\n        linearGradient: Boolean,\r\n        // 刻度尺背景渐变方向\r\n        linearGradientDirectionVar: {\r\n            type: Array,\r\n            default: () => [\r\n                'to', 'right'\r\n            ]\r\n        },\r\n        // 刻度尺背景渐变颜色\r\n        linearGradientColorVar: {\r\n            type: Array,\r\n            default: () => [\r\n                'rgba(255, 255, 255, 1)',\r\n                'rgba(255, 255, 255, 0) 25%',\r\n                'rgba(255, 255, 255, 0) 85%',\r\n                'rgba(255, 255, 255, 1) 100%'\r\n            ]\r\n        },\r\n        // 是否自动监听元素大小改变事件\r\n        autoResize: Boolean,\r\n        // 刻度值label样式\r\n        labelStyle: Object\r\n    },\r\n    data () {\r\n        return {\r\n            startIndex: 0,\r\n            scrollTimer: null,\r\n            val: this.defaultValue || this.min,\r\n            isTouch: false,\r\n            fireScrollEnd: null,\r\n            width: document.body.clientWidth,\r\n            observer: null,\r\n            id: getNextId(),\r\n            styleSheet: this.getStyleSheet()\r\n        };\r\n    },\r\n    computed: {\r\n        /**\r\n         * 一半可视宽度\r\n         * @returns {number}\r\n         */\r\n        halfWidth () {\r\n            return this.width / 2;\r\n        },\r\n        /**\r\n         * 所有刻度尺列表\r\n         * @returns {{gapValue: number, index: number, value: number}[]}\r\n         */\r\n        list () {\r\n            return Array.from({ length: this.max + 1 - this.min }).map((_, index) => {\r\n                const value = index + this.min;\r\n                return {\r\n                    value,\r\n                    index,\r\n                    gapValue: this.getRealValue(value)\r\n                };\r\n            });\r\n        },\r\n        decimalCount () {\r\n            return this.getDecimalCount(this.valueGap);\r\n        },\r\n        /**\r\n         * 可视刻度尺数量\r\n         * @returns {number}\r\n         */\r\n        viewCount () {\r\n            return Math.round(this.width / this.gap);\r\n        },\r\n        /**\r\n         * 可视范围开始刻度尺值的下标\r\n         * @returns {number}\r\n         */\r\n        start () {\r\n            return Math.max(0, Math.floor(this.startIndex - this.viewCount / 2 - this.buffer));\r\n        },\r\n        /**\r\n         * 可视范围结束刻度尺值的下标\r\n         * @returns {number}\r\n         */\r\n        end () {\r\n            return Math.min(this.start + this.viewCount + this.buffer * 2, this.list.length);\r\n        },\r\n        /**\r\n         * 可视范围的刻度尺列表\r\n         * @returns {{gapValue: number, index: number, value: number}[]}\r\n         */\r\n        pool () {\r\n            return this.list.slice(this.start, this.end);\r\n        },\r\n        /**\r\n         * 总刻度尺的元素大小\r\n         * @returns {number}\r\n         */\r\n        size () {\r\n            return this.list.length * this.gap + this.width - this.gap;\r\n        },\r\n        /**\r\n         * 刻度尺最大高度\r\n         * @returns {string}\r\n         */\r\n        itemDIVHeight () {\r\n            return this.getPx(this.itemMaxHeight);\r\n        },\r\n        /**\r\n         * 每个刻度尺宽度\r\n         * @returns {string}\r\n         * @private\r\n         */\r\n        _itemWidth () {\r\n            const { itemWidth } = this;\r\n            return this.getPx(itemWidth);\r\n        },\r\n        /**\r\n         * 刻度尺标线样式\r\n         * @returns {{borderLeft: string, left: string, height: string}}\r\n         * @private\r\n         */\r\n        _pointStyle () {\r\n            const width = this.getPx(this.pointWidth);\r\n            const numberWidth = parseFloat(this.pointWidth);\r\n            return {\r\n                borderLeft: `${width} solid ${this.pointColor}`,\r\n                left: `calc(50% - ${numberWidth / 2 - 1}px)`,\r\n                height: this.itemDIVHeight,\r\n                ...(this.pointStyle || {})\r\n            };\r\n        },\r\n        /**\r\n         * 刻度尺容器样式\r\n         * @returns {{borderTop: string, height: string}}\r\n         */\r\n        style () {\r\n            return {\r\n                height: this.getPx(this.height),\r\n                borderTop: this.topBorder ? `${this.getPx(this.topBorderWidth)} solid ${this.topBorderColor}` : 'none'\r\n            };\r\n        },\r\n    },\r\n    watch: {\r\n        /**\r\n         * 实时发送当前值变化\r\n         * @param value\r\n         */\r\n        val (value) {\r\n            this.$emit('change', this.getRealValue(value));\r\n        },\r\n        /**\r\n         * 设置背景渐变\r\n         */\r\n        linearGradient () {\r\n            this.setAfterStyle();\r\n        },\r\n        /**\r\n         * 设置背景渐变方向\r\n         */\r\n        linearGradientDirectionVar () {\r\n            this.setAfterStyle();\r\n        },\r\n        /**\r\n         * 设置背景渐变颜色\r\n         */\r\n        linearGradientColorVar () {\r\n            this.setAfterStyle();\r\n        },\r\n        autoSize () {\r\n            this.setAutoResize();\r\n        }\r\n    },\r\n    mounted () {\r\n        this.setAutoResize();\r\n        this.resize();\r\n        setTimeout(() => this.setValue(this.val));\r\n        this.setAfterStyle();\r\n        this.$el.addEventListener('touchstart', this.touchStart.bind(this));\r\n        this.$el.addEventListener('touchend', this.touchEnd.bind(this));\r\n    },\r\n    methods: {\r\n        getStyleSheet () {\r\n            for (let i = 0; i < document.styleSheets.length; i++) {\r\n                const sheet = document.styleSheets.item(i);\r\n                if (!sheet.href) {\r\n                    return sheet;\r\n                }\r\n            }\r\n            const style = document.createElement('style');\r\n            document.head.appendChild(style);\r\n            return this.getStyleSheet();\r\n        },\r\n        async setAutoResize () {\r\n            if (this.autoResize) {\r\n                const elementResizeDetectorMaker = await import('element-resize-detector');\r\n                this.observer = elementResizeDetectorMaker.default();\r\n                this.observer.uninstall(this.$el);\r\n                this.observer.listenTo(this.$el, this.resize.bind(this));\r\n            } else {\r\n                if (this.observer) {\r\n                    this.observer.uninstall(this.$el);\r\n                }\r\n            }\r\n        },\r\n        resize () {\r\n            this.width = this.$refs.scroll.clientWidth;\r\n        },\r\n        touchStart () {\r\n            this.isTouch = true;\r\n        },\r\n        touchEnd () {\r\n            this.isTouch = false;\r\n            if (this.fireScrollEnd) {\r\n                const event = this.fireScrollEnd;\r\n                this.fireScrollEnd = null;\r\n                this.scrollEnd(event);\r\n            }\r\n        },\r\n        getRealValue (value) {\r\n            return Number((value * this.valueGap).toFixed(this.decimalCount));\r\n        },\r\n        /**\r\n         * 获取像素样式\r\n         * @param value\r\n         * @param unit\r\n         * @returns {*}\r\n         */\r\n        getPx(value, unit = 'px') {\r\n            return typeof value === 'number' ? `${value}${unit}` : value;\r\n        },\r\n        /**\r\n         * 获取刻度线样式\r\n         * @param index\r\n         * @returns {{}|{borderLeft: string, height: *}}\r\n         */\r\n        getItemStyle (index) {\r\n            if (index < 0) {\r\n                return {};\r\n            }\r\n            const { itemColor, itemHeight } = this;\r\n            const height = this.getPx(itemHeight(index));\r\n            return {\r\n                borderLeft: `${this._itemWidth} solid ${itemColor}`,\r\n                height\r\n            };\r\n        },\r\n        /**\r\n         * 刻度值label是否显示\r\n         * @param index\r\n         * @returns {boolean|boolean}\r\n         */\r\n        labelShow (index) {\r\n            return this.showLabel && (index % this.labelGap === 0);\r\n        },\r\n        setAfterStyle () {\r\n            let style;\r\n            if (!this.linearGradient) {\r\n                style = 'content: none';\r\n            } else {\r\n                const direction = this.linearGradientDirectionVar.join(' ');\r\n                const color = this.linearGradientColorVar.join(',');\r\n                style = `background: linear-gradient(${direction}, ${color}); content: \"\"`;\r\n            }\r\n            const selector = `.virtual-ruler[data-vr-id=\"${this.id}\"]::after`;\r\n            this.deleteAfterCSSRule(selector);\r\n            this.styleSheet.addRule(selector, style);\r\n        },\r\n        deleteAfterCSSRule (selector) {\r\n            for (let i = 0; i < this.styleSheet.rules.length; i++) {\r\n                if (this.styleSheet.rules.item(i).selectorText === selector) {\r\n                    this.styleSheet.deleteRule(i);\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n        getDecimalCount (num) {\r\n            const str = String(num);\r\n            const index = str.indexOf('.');\r\n            return Math.max(str.length - 1 - index, 0);\r\n        },\r\n        /**\r\n         * 设置刻度值并滑动刻度尺标线到该位置\r\n         * @param value\r\n         */\r\n        setValue (value) {\r\n            const {valueGap} = this;\r\n            if (valueGap > 0 && valueGap < 1) {\r\n                this._setValue(Math.ceil(value / valueGap));\r\n            } else {\r\n                this._setValue(value / valueGap);\r\n            }\r\n        },\r\n        _setValue (value) {\r\n            const index = this.list.findIndex(item => item.value === value);\r\n            if (index > -1) {\r\n                this.$refs.scroll.scrollLeft = index * this.gap;\r\n            }\r\n        },\r\n        scrollEnd () {\r\n            this._setValue(this.val);\r\n        },\r\n        scroll (event) {\r\n            const {scrollLeft} = event.target;\r\n            if (scrollLeft >= this.list.length * this.gap) {\r\n                return;\r\n            }\r\n            clearTimeout(this.scrollTimer);\r\n            this.val = Math.round(scrollLeft / this.gap + this.min);\r\n            this.startIndex = Math.floor(scrollLeft / this.gap);\r\n            this.scrollTimer = setTimeout(() => {\r\n                if (this.isTouch) {\r\n                    this.fireScrollEnd = event;\r\n                } else {\r\n                    this.scrollEnd(event);\r\n                }\r\n            }, 200);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n    .virtual-ruler {\r\n        position: relative;\r\n        width: 100%;\r\n        &::after {\r\n            content: \"\";\r\n            position: absolute;\r\n            z-index: 1;\r\n            top: 0;\r\n            right: 0;\r\n            pointer-events: none;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .virtual-ruler-scroll {\r\n            overflow-x: auto;\r\n            position: relative;\r\n            &::-webkit-scrollbar {\r\n                display: none;\r\n            }\r\n        }\r\n        &-point {\r\n            position: absolute;\r\n            left: 50%;\r\n            top: 0;\r\n        }\r\n        &-body {\r\n            position: relative;\r\n            display: flex;\r\n            height: 100%;\r\n            &-item {\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                will-change: transform;\r\n            }\r\n        }\r\n        &-label {\r\n            position: absolute;\r\n            text-align: center;\r\n            width: 50px;\r\n            left: -25px;\r\n            color: #cccccc;\r\n            font-size: 15px;\r\n        }\r\n    }\r\n</style>"]}]}