{"remainingRequest":"D:\\IloveCode\\Gantt\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IloveCode\\Gantt\\src\\components\\gantt\\Gantt.vue?vue&type=style&index=0&id=369d3859&lang=less&scoped=true&","dependencies":[{"path":"D:\\IloveCode\\Gantt\\src\\components\\gantt\\Gantt.vue","mtime":1646453249532},{"path":"D:\\IloveCode\\Gantt\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IloveCode\\Gantt\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\IloveCode\\Gantt\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\IloveCode\\Gantt\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IloveCode\\Gantt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IloveCode\\Gantt\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAdG9vbGJhckhlaWdodDogNzBweDsNCi5wYWdlIHsNCiAgaGVpZ2h0OiAxMDAlOw0KICB3aWR0aDogMTAwJTsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgLnRvb2xiYXIgew0KICAgIGhlaWdodDogQHRvb2xiYXJIZWlnaHQ7DQogICAgd2lkdGg6IDEwMCU7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBmbGV4LWRpcmVjdGlvbjogcm93Ow0KICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAganVzdGlmeS1pdGVtczogZmxleC1zdGFydDsNCiAgICBwYWRkaW5nOiAoQHRvb2xiYXJIZWlnaHQgLyAyKTsNCiAgICAuZGF0ZUlucHV0IHsNCiAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkY2RmZTY7DQogICAgICBoZWlnaHQ6IChAdG9vbGJhckhlaWdodCAvIDEuNSk7DQogICAgICB3aWR0aDogMjUwcHg7DQogICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsNCiAgICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDsNCiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICAgIG1hcmdpbi1yaWdodDogMjBweDsNCiAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgICAgIGNvbG9yOiMwMEJDRDQ7DQogICAgICBmb250LXNpemU6IDE0cHg7DQogICAgfQ0KICAgIC5idXR0b25Hcm91cCB7DQogICAgICBoZWlnaHQ6IChAdG9vbGJhckhlaWdodCAvIDEuNSk7DQogICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsNCiAgICAgIC5pcy1hY3RpdmU6bm90KC50ZXh0KSwgOmFjdGl2ZTpub3QoLnRleHQpIHsNCiAgICAgICAgYmFja2dyb3VuZDojM2E4ZWU2Ow0KICAgICAgICBib3JkZXItY29sb3I6IzNhOGVlNjsNCiAgICAgICAgY29sb3I6I0ZGRg0KICAgICAgfQ0KICAgICAgOmhvdmVyOm5vdCgudGV4dCkgew0KICAgICAgICBiYWNrZ3JvdW5kOiM2NmIxZmY7DQogICAgICAgIGJvcmRlci1jb2xvcjojNjZiMWZmOw0KICAgICAgICBjb2xvcjojRkZGDQogICAgICB9DQogICAgICAuYnV0dG9uIHsNCiAgICAgICAgd2lkdGg6IDgwcHg7DQogICAgICAgIGZvbnQtc2l6ZTogMTVweDsNCiAgICAgICAgaGVpZ2h0OiAoQHRvb2xiYXJIZWlnaHQgLyAxLjUpOw0KICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGNkZmU2Ow0KICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7DQogICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICAgICAgICBmb250LXdlaWdodDogNTAwOw0KICAgICAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgICB9DQogICAgfQ0KICB9DQogIC5nYW50dCB7DQogICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSBAdG9vbGJhckhlaWdodCk7DQogICAgd2lkdGg6IDEwMCU7DQogIH0NCn0NCg=="},{"version":3,"sources":["Gantt.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Gantt.vue","sourceRoot":"src/components/gantt","sourcesContent":["<template>\r\n  <div class=\"page\">\r\n    <div class=\"toolbar\">\r\n      <div class=\"dateInput\">\r\n        <div @click=\"openStartDatePicker\">{{selectedStartDate}}</div>\r\n        <span style=\"margin-right:20px;margin-left:20px;color:#606266\">至</span>\r\n        <div @click=\"openEndDatePicker\">{{selectedEndDate}}</div>\r\n      </div>\r\n      <date-picker\r\n        v-if=\"showEndDatePicker\"\r\n        :date=\"endDate\"\r\n        :min-date=\"minEndDate\"\r\n        :max-date=\"maxEndDate\"\r\n        @confirm=\"confirmEnd\"\r\n        @cancel=\"cancelEnd\">\r\n      </date-picker>\r\n      <date-picker\r\n        v-if=\"showStartDatePicker\"\r\n        :date=\"startDate\"\r\n        :min-date=\"minStartDate\"\r\n        :max-date=\"maxStartDate\"\r\n        @confirm=\"confirmStart\"\r\n        @cancel=\"cancelStart\">\r\n      </date-picker>\r\n      <div class=\"buttonGroup\">\r\n        <div :class=\"buttonClass[0]\" style=\"border-radius:10px 0 0 10px;\" @click=\"timeMode('月')\"><div class=\"text\">月</div></div>\r\n        <div :class=\"buttonClass[1]\" style=\"border-left:0;border-right:0\" @click=\"timeMode('日')\"><div class=\"text\">日</div></div>\r\n        <div :class=\"buttonClass[2]\" style=\"border-radius:0 10px 10px 0;\" @click=\"timeMode('时')\"><div class=\"text\">时</div></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"gantt\">\r\n      <SplitPane direction=\"row\" :min=\"10\" :max=\"80\" :triggerLength=\"10\" :paneLengthPercent.sync=\"paneLengthPercent\">\r\n        <template v-slot:one>\r\n          <task-table :headersHeight='headersHeight' :rowHeight='rowHeight'></task-table>      \r\n        </template>\r\n        <template v-slot:two>\r\n          <gantt-table :headersHeight='headersHeight' :rowHeight='rowHeight'></gantt-table>\r\n        </template>\r\n      </SplitPane>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport DatePicker from './DatePicker.vue'\r\nimport SplitPane from './SplitPane.vue'\r\nimport GanttTable from './Table.vue'\r\nimport TaskTable from './task/TaskTable.vue'\r\nimport { mutations } from '@/components/gantt/store.js'\r\nimport Vue from 'vue'\r\nexport default {\r\n  props : {\r\n    headersHeight : {\r\n      type: Number,\r\n      default: 50\r\n    },\r\n    rowHeight: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    tasks: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    mapFields: {\r\n      type: Object,\r\n      default: () => {}\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      // 任务表头\r\n      taskHeaders : [      \r\n        {title: 'ID', width: 20, property:'id',show: false},\r\n        {title: '任务名称', width: 190, property:'task',show: true},\r\n        {title: '优先级', width: 90, property: 'priority',show: true},\r\n        {title: '开始时间', width: 150, property: 'startdate',show: true},\r\n        {title: '结束时间', width: 150, property: 'enddate',show: true},\r\n        {title: '耗时', width: 90, property: 'takestime',show: true}\r\n      ],\r\n      paneLengthPercent: 35,\r\n      buttonClass: [\"button is-active\",\"button\",\"button\"],\r\n      mode: '月',\r\n      // 开始日期默认值\r\n      startDate: this.$moment().locale('zh-cn').format('YYYY-MM-DD'),\r\n      minStartDate: this.$moment().locale('zh-cn').add(-5, 'y').format('YYYY-MM-DD'),\r\n      maxStartDate: this.$moment().locale('zh-cn').add(5, 'y').format('YYYY-MM-DD'),\r\n      showStartDatePicker: false,\r\n      selectedStartDate: '点击选择日期',\r\n      // 结束日期默认值\r\n      endDate: this.$moment().locale('zh-cn').format('YYYY-MM-DD'),\r\n      minEndDate: this.startDate,\r\n      maxEndDate: this.$moment(this.startDate).locale('zh-cn').add(5, 'y').format('YYYY-MM-DD'),\r\n      showEndDatePicker: false,\r\n      selectedEndDate: '点击选择日期',\r\n      // 月度表头\r\n      monthHeaders: [],\r\n      // 日表头\r\n      dayHeaders : [],\r\n      // 小时表头\r\n      hourHeaders : [],\r\n      // 表头最小单位宽度\r\n      scale : 0,\r\n      // 时间刻度一行有多少个单元格\r\n      timelineCellCount: 0,\r\n      // 甘特图开始时间\r\n      startGanttDate: null,\r\n      // 甘特图结束时间\r\n      endGanttDate: null\r\n    }\r\n  },\r\n\tcomponents: { GanttTable, TaskTable, SplitPane, DatePicker },\r\n\twatch: {\r\n    // 时间表头最小单位宽度,所有表头的宽度都是他的倍数\r\n    scale: function (newVal, oldVal) {\r\n      if (newVal != oldVal) {\r\n        this.setScale(newVal)\r\n      }\r\n    },\r\n    // 任务表头\r\n    taskHeaders: function (newVal, oldVal) {\r\n      if (newVal != oldVal) {\r\n        this.setTaskHeaders(newVal)\r\n      }\r\n    },\r\n    // 月度表头\r\n    monthHeaders: function (newVal, oldVal) {\r\n      if (newVal != oldVal) {\r\n        this.setMonthHeaders(newVal)\r\n      }\r\n    },\r\n    // 日表头\r\n    dayHeaders: function (newVal, oldVal) {\r\n      if (newVal != oldVal) {\r\n        this.setDayHeaders(newVal)\r\n      }\r\n    },\r\n    // 小时表头\r\n    hourHeaders: function (newVal, oldVal) {\r\n      if (newVal != oldVal) {\r\n        this.setHourHeaders(newVal)\r\n      }\r\n    },\r\n    // 选择开始日期\r\n    selectedStartDate: function () {\r\n       this.setTimeLineHeaders(this.mode)\r\n    },\r\n    // 选择结束日期\r\n    selectedEndDate: function () {\r\n       this.setTimeLineHeaders(this.mode)\r\n    },\r\n    // 切换缩放单位(月/日/时)\r\n    mode: function (newVal) {\r\n      this.setMode(newVal)\r\n      this.setTimeLineHeaders(newVal)\r\n    },\r\n    // 任务\r\n    tasks: function (newVal) {\r\n      this.setTasks(newVal)\r\n    },\r\n    // 字段映射\r\n    mapFields: function (newVal) {\r\n      this.setMapFields(newVal)\r\n    },\r\n    // 时间刻度一行有多少个单元格\r\n    timelineCellCount: function (newVal) {\r\n      this.setTimelineCellCount(newVal)\r\n    },\r\n    // 甘特图开始时间\r\n    startGanttDate: function (newVal) {\r\n      this.setStartGanttDate(newVal)\r\n    },\r\n    // 甘特图结束时间\r\n    endGanttDate: function (newVal) {\r\n      this.setEndGanttDate(newVal)\r\n    }\r\n  },\r\n\tcreated() {\r\n    this.setMonthHeaders(this.monthHeaders)\r\n    this.setDayHeaders(this.dayHeaders)\r\n    this.setHourHeaders(this.hourHeaders)\r\n    this.setTaskHeaders(this.taskHeaders)\r\n    this.setTasks(this.tasks)\r\n    this.setMapFields(this.mapFields)\r\n    this.setTimelineCellCount(this.timelineCellCount)\r\n    this.setMode(this.mode)\r\n  },\r\n\tmounted() {\r\n    this.monthHeaders = []\r\n    this.dayHeaders = []\r\n    this.hourHeaders = []\r\n    this.mode = '月'\r\n\t},\r\n  methods:{\r\n    setDayHeaders: mutations.setDayHeaders,\r\n    setTaskHeaders: mutations.setTaskHeaders,\r\n    setMonthHeaders: mutations.setMonthHeaders,\r\n    setHourHeaders: mutations.setHourHeaders,\r\n    setScale: mutations.setScale,\r\n    setTasks: mutations.setTasks,\r\n    setMapFields: mutations.setMapFields,\r\n    setTimelineCellCount: mutations.setTimelineCellCount,\r\n    setStartGanttDate: mutations.setStartGanttDate,\r\n    setEndGanttDate: mutations.setEndGanttDate,\r\n    setMode: mutations.setMode,\r\n    // 修改按钮样式\r\n    timeMode (mode) {\r\n      for(let button of this.buttonClass){\r\n        Vue.set(this.buttonClass,this.buttonClass.indexOf(button),'button')\r\n      }\r\n      switch (mode)\r\n      {\r\n        case '月': {\r\n          Vue.set(this.buttonClass,0,'button is-active')\r\n          break;       \r\n        }\r\n        case '日': {\r\n          Vue.set(this.buttonClass,1,'button is-active')\r\n          break;\r\n        }\r\n        case '时': {\r\n          Vue.set(this.buttonClass,2,'button is-active')\r\n          break;\r\n        }\r\n      }\r\n      this.mode = mode\r\n    },\r\n    setTimeLineHeaders(newVal) {\r\n      // 开始时间格式是否合法\r\n      if(!this.$moment(this.selectedStartDate, 'YYYY-MM-DD', true).isValid())\r\n        return\r\n      // 结束时间格式是否合法\r\n      if(!this.$moment(this.selectedEndDate, 'YYYY-MM-DD', true).isValid())\r\n        return\r\n      // 检验开始时间结束时间范围的合法性\r\n      let days = this.$moment(this.selectedEndDate).diff(this.$moment(this.selectedStartDate),'days')\r\n      if(days < 0)\r\n        return\r\n      this.startGanttDate = this.selectedStartDate + ' 00:00:00'\r\n      this.endGanttDate = this.selectedEndDate + ' 23:59:59'\r\n      this.dayHeaders = []\r\n      this.monthHeaders = []\r\n      this.hourHeaders = []\r\n      switch (newVal)\r\n      {\r\n        case '月': {\r\n          this.scale = 80\r\n          let recurrence = this.$moment().recur(this.selectedStartDate, this.selectedEndDate).every(1).months();\r\n          let months = recurrence.all(\"L\").map(x => this.$moment(x).locale('zh-cn').format('YYYY-MM-DD'))\r\n\r\n          let findIndex = months.findIndex((item) => { \r\n            return this.$moment(item).locale('zh-cn').format('YYYY-MM') === this.$moment(this.selectedEndDate).locale('zh-cn').format('YYYY-MM') \r\n          })\r\n          if(findIndex === -1) {\r\n            months.push(this.$moment(this.selectedEndDate).locale('zh-cn').format('YYYY-MM-DD'))\r\n          }\r\n          // 时间跨度只有一个月\r\n          if(months.length == 1) {\r\n            let days = this.$moment(this.selectedEndDate).diff(this.$moment(this.selectedStartDate), 'days') + 1\r\n            this.monthHeaders.push({title: this.$moment(months[0]).locale('zh-cn').format('MMMM'), width: days * this.scale})\r\n          }\r\n          else {\r\n            for(let month of months) {\r\n              let index = months.indexOf(month)\r\n              // 第一月\r\n              if(index === 0) {\r\n                let endOfMonth = this.$moment(this.selectedStartDate).endOf('month').format(\"YYYY-MM-DD\")\r\n                let days = this.$moment(endOfMonth).diff(this.$moment(this.selectedStartDate), 'days') + 1\r\n                this.monthHeaders.push({title: this.$moment(month).locale('zh-cn').format('MMMM'), width: days * this.scale})\r\n              }\r\n              // 最后一个月\r\n              else if(index === months.length - 1) {\r\n                let startOfMonth = this.$moment(this.selectedEndDate).startOf('month').format(\"YYYY-MM-DD\")\r\n                let days = this.$moment(this.selectedEndDate).diff(this.$moment(startOfMonth), 'days') + 1\r\n                this.monthHeaders.push({title: this.$moment(month).locale('zh-cn').format('MMMM'), width: days * this.scale})\r\n              }\r\n              // 中间的月\r\n              else {\r\n                let days = this.$moment(month, \"YYYY-MM\").daysInMonth()\r\n                this.monthHeaders.push({title: this.$moment(month).locale('zh-cn').format('MMMM'), width: days * this.scale})\r\n              }\r\n            }\r\n          }\r\n\r\n          recurrence = this.$moment().recur(this.selectedStartDate, this.selectedEndDate).every(1).days();\r\n          let captions = recurrence.all(\"L\").map(x => this.$moment(x).locale('zh-cn').format('DD日'))\r\n          for(let caption of captions) {\r\n            this.dayHeaders.push({title: caption, width: this.scale})\r\n          }\r\n          this.timelineCellCount = this.dayHeaders.length\r\n          break;       \r\n        }\r\n        case '日': {\r\n          this.scale = 80\r\n          let recurrence = this.$moment().recur(this.selectedStartDate, this.selectedEndDate).every(1).days();\r\n          let captions = recurrence.all(\"L\").map(x => this.$moment(x).locale('zh-cn').format('MMMM DD日'))\r\n          for(let caption of captions) {\r\n            this.dayHeaders.push({title: caption, width: this.scale})\r\n          }\r\n          this.timelineCellCount = this.dayHeaders.length\r\n          break;\r\n        }\r\n        case '时': {\r\n          this.scale = 30\r\n          let recurrence = this.$moment().recur(this.selectedStartDate, this.selectedEndDate).every(1).days();\r\n          let captions = recurrence.all(\"L\").map(x => this.$moment(x).locale('zh-cn').format('MMMM DD日'))\r\n          for(let caption of captions) {\r\n            this.dayHeaders.push({title: caption, width: 24 * this.scale})\r\n            for(let i= 0;i <= 23;i++){\r\n              this.hourHeaders.push({title: i + '点', width: this.scale})\r\n            }\r\n          }\r\n          this.timelineCellCount = this.hourHeaders.length\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    openEndDatePicker() {\r\n      this.showEndDatePicker = true;\r\n    },\r\n    openStartDatePicker() {\r\n      this.showStartDatePicker = true;\r\n    },\r\n    confirmEnd(value) {\r\n      let days = this.$moment(value.date).diff(this.$moment(this.startDate),'days')\r\n      if(days < 0) {\r\n        this.selectedStartDate = value.date;\r\n        this.startDate = value.date;\r\n      }\r\n      this.showEndDatePicker = false;\r\n      this.selectedEndDate = value.date;\r\n      this.endDate = value.date;\r\n    },\r\n    confirmStart(value) {\r\n      let days = this.$moment(this.endDate).diff(this.$moment(value.date),'days')\r\n      if(days < 0) {\r\n        this.selectedEndDate = value.date;\r\n        this.endDate = value.date;\r\n      }\r\n      this.showStartDatePicker = false;\r\n      this.selectedStartDate = value.date;\r\n      this.startDate = value.date;\r\n    },\r\n    cancelEnd() {\r\n      this.showEndDatePicker = false;\r\n    },\r\n    cancelStart() {\r\n      this.showStartDatePicker = false;\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n@toolbarHeight: 70px;\r\n.page {\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  .toolbar {\r\n    height: @toolbarHeight;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-items: flex-start;\r\n    padding: (@toolbarHeight / 2);\r\n    .dateInput {\r\n      cursor: pointer;\r\n      border: 1px solid #dcdfe6;\r\n      height: (@toolbarHeight / 1.5);\r\n      width: 250px;\r\n      display: flex;\r\n      flex-direction: row;\r\n      display: -webkit-flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      margin-right: 20px;\r\n      border-radius: 5px;\r\n      color:#00BCD4;\r\n      font-size: 14px;\r\n    }\r\n    .buttonGroup {\r\n      height: (@toolbarHeight / 1.5);\r\n      display: flex;\r\n      flex-direction: row;\r\n      .is-active:not(.text), :active:not(.text) {\r\n        background:#3a8ee6;\r\n        border-color:#3a8ee6;\r\n        color:#FFF\r\n      }\r\n      :hover:not(.text) {\r\n        background:#66b1ff;\r\n        border-color:#66b1ff;\r\n        color:#FFF\r\n      }\r\n      .button {\r\n        width: 80px;\r\n        font-size: 15px;\r\n        height: (@toolbarHeight / 1.5);\r\n        border: 1px solid #dcdfe6;\r\n        display: flex;\r\n        display: -webkit-flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  .gantt {\r\n    height: calc(100% - @toolbarHeight);\r\n    width: 100%;\r\n  }\r\n}\r\n</style>"]}]}